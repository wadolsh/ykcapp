{"filter":false,"title":"app.tools.js","tooltip":"/app/scripts/app.tools.js","undoManager":{"mark":16,"position":16,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":248,"column":2},"end":{"row":249,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":249,"column":0},"end":{"row":250,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":250,"column":0},"end":{"row":251,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":251,"column":0},"end":{"row":252,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":252,"column":0},"end":{"row":253,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":253,"column":0},"end":{"row":254,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":254,"column":0},"end":{"row":255,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":255,"column":0},"end":{"row":256,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":256,"column":0},"end":{"row":257,"column":0}},"text":"\r\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":257,"column":0},"end":{"row":258,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":258,"column":0},"end":{"row":408,"column":0}},"lines":["","var parse = {","  date: {","    /** 日付をUTCで処理 */","    addZeroArray: function(arr) {","      var val = null;","      for (var i in arr) {","        val = arr[i];","        if ((angular.isNumber(val) && val < 10) || val.length < 2) {","          arr[i] = ('0' + val).slice(-2)","        }","      }","      return arr;","    },","    read: function(value) {","      return value ? {","        __type: 'Date',","        iso: (angular.isDate(value) ? value.toJSON() : new Date(value.replace('T', ' ')).toJSON())","      } : null;","    },","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return parse.date.getDate(dataObj) + \"T\" + parse.date.getTime(dataObj);","      }","      return dataObj;","    },","    getDate: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getFullYear(), date.getMonth() + 1, date.getDate()]).join( '-' );","      }","      return dataObj;","    },","    getMMDD: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getMonth() + 1, date.getDate()]).join( '-' );","      }","      return dataObj;","    },","    getTime: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getHours(), date.getMinutes(), date.getSeconds()]).join( ':' );","      }","      return dataObj;","    },","    getHHMM: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getHours(), date.getMinutes()]).join( ':' );","      }","      return dataObj;","    },","    addDate: function(days, date) {","      var beforeOneWeek = date || new Date();","      beforeOneWeek.setDate(beforeOneWeek.getDate() + days);","      return beforeOneWeek;","    }","  },","","  dateLocal: {","    /** 日付をあるままで処理する */","    read: function(value) {","      return value ? {","        __type: 'Date',","        iso: (angular.isDate(value) ? value.toJSON() : new Date(value).toJSON())","      } : null;","    },","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.replace('.000Z', '');","      }","      return dataObj;","    },","    getDate: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[0];","      }","      return dataObj;","    },","    getMMDD: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[0].substr(5,8);","      }","      return dataObj;","    },","    getTime: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[1].replace('.000Z', '');","      }","      return dataObj;","    },","    getHHMM: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[1].replace('.000Z', '').replace(/:00$/, '');","      }","      return dataObj;","    },","    addDate: function(days, date) {","      var beforeOneWeek = date || new Date();","      beforeOneWeek.setDate(beforeOneWeek.getDate() + days);","      return beforeOneWeek;","    }","  },","  pointer: {","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Pointer') {","        return dataObj.objectId;","      }","    },","    read: function(val, className){","      return val ? {\"__type\": \"Pointer\", \"className\": className, \"objectId\": val} : null;","    }","  }","}","var validate = {","  message: function($error, label, parms) {","    var strs = [];","    angular.forEach($error, function(val, key) {","      strs.push(validate.check[key](label, parms))","    });","    return strs.length > 0 ? strs.join(' | ') : '';","  },","  check: {","    required: function(label) {","      return '必須'","    }","  }","}","","var ls = {","  set: function(key, data) {","      localStorage[key] = angular.toJson(data, false);","  },","  get: function(key) {","    try {","      return angular.fromJson(localStorage[key] || null);","    } catch (e) {","      return localStorage[key];","    }","      ","  },","  remove: function(key) {","      delete localStorage[key];","  },","  clear: function () {","    localStorage.clear();","  }","};"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":256,"column":0},"end":{"row":388,"column":0}},"nl":"\r\n","lines":["","","","var parse = {","  date: {","    /** 日付をUTCで処理 */","    addZeroArray: function(arr) {","      var val = null;","      for (var i in arr) {","        val = arr[i];","        if ((angular.isNumber(val) && val < 10) || val.length < 2) {","          arr[i] = ('0' + val).slice(-2)","        }","      }","      return arr;","    },","    read: function(value) {","      return value ? {","        __type: 'Date',","        iso: (angular.isDate(value) ? value.toJSON() : new Date(value.replace('T', ' ')).toJSON())","      } : null;","    },","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return parse.date.getDate(dataObj) + \"T\" + parse.date.getTime(dataObj);","      }","      return dataObj;","    },","    getDate: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getFullYear(), date.getMonth() + 1, date.getDate()]).join( '-' );","      }","      return dataObj;","    },","    getMMDD: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getMonth() + 1, date.getDate()]).join( '-' );","      }","      return dataObj;","    },","    getTime: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getHours(), date.getMinutes(), date.getSeconds()]).join( ':' );","      }","      return dataObj;","    },","    getHHMM: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        var date = new Date(dataObj.iso);","        return parse.date.addZeroArray([date.getHours(), date.getMinutes()]).join( ':' );","      }","      return dataObj;","    },","    addDate: function(days, date) {","      var beforeOneWeek = date || new Date();","      beforeOneWeek.setDate(beforeOneWeek.getDate() + days);","      return beforeOneWeek;","    }","  },","","  dateLocal: {","    /** 日付をあるままで処理する */","    read: function(value) {","      return value ? {","        __type: 'Date',","        iso: (angular.isDate(value) ? value.toJSON() : new Date(value).toJSON())","      } : null;","    },","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.replace('.000Z', '');","      }","      return dataObj;","    },","    getDate: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[0];","      }","      return dataObj;","    },","    getMMDD: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[0].substr(5,8);","      }","      return dataObj;","    },","    getTime: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[1].replace('.000Z', '');","      }","      return dataObj;","    },","    getHHMM: function(dataObj) {","      if (dataObj && dataObj.__type == 'Date') {","        return dataObj.iso.split('T')[1].replace('.000Z', '').replace(/:00$/, '');","      }","      return dataObj;","    },","    addDate: function(days, date) {","      var beforeOneWeek = date || new Date();","      beforeOneWeek.setDate(beforeOneWeek.getDate() + days);","      return beforeOneWeek;","    }","  },","  pointer: {","    write: function(dataObj) {","      if (dataObj && dataObj.__type == 'Pointer') {","        return dataObj.objectId;","      }","    },","    read: function(val, className){","      return val ? {\"__type\": \"Pointer\", \"className\": className, \"objectId\": val} : null;","    }","  }","}","var validate = {","  message: function($error, label, parms) {","    var strs = [];","    angular.forEach($error, function(val, key) {","      strs.push(validate.check[key](label, parms))","    });","    return strs.length > 0 ? strs.join(' | ') : '';","  },","  check: {","    required: function(label) {","      return '必須'","    }","  }","}"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":255,"column":0},"end":{"row":256,"column":0}},"nl":"\r\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":254,"column":0},"end":{"row":255,"column":0}},"nl":"\r\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":253,"column":0},"end":{"row":254,"column":0}},"nl":"\r\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":252,"column":0},"end":{"row":253,"column":0}},"nl":"\r\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":251,"column":0},"end":{"row":252,"column":0}},"nl":"\r\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":250,"column":0},"end":{"row":251,"column":0}},"nl":"\r\n","lines":[""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":251,"column":0},"end":{"row":270,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1407206657435,"hash":"741773021c378315f9231a391676e033a227887b"}